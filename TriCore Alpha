// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © iansequeira

//@version=5
strategy("TriCore Alpha", overlay=true, 
         default_qty_type=strategy.percent_of_equity, default_qty_value=20, 
         initial_capital=100000, commission_type=strategy.commission.percent, commission_value=0.1)

// ═══════════════════════════════════════════════════════════════════
// TARGET METRICS: Sharpe 1.2-1.8 | Sortino 1.5-2.0 | Win Rate 55-65% | Max DD 8-15%
// ═══════════════════════════════════════════════════════════════════

// ═══════════════════════════════════════════════════════════════════
// CORE INPUTS
// ═══════════════════════════════════════════════════════════════════
// Momentum Settings
fast_ema = input.int(12, "Fast EMA", minval=5, maxval=20, group="Momentum")
slow_ema = input.int(26, "Slow EMA", minval=20, maxval=50, group="Momentum")
signal_ema = input.int(9, "Signal EMA", minval=5, maxval=15, group="Momentum")
rsi_period = input.int(14, "RSI Period", minval=10, maxval=20, group="Momentum")

// Mean Reversion Settings
bb_length = input.int(20, "Bollinger Length", minval=15, maxval=30, group="Mean Reversion")
bb_mult = input.float(2.0, "Bollinger Multiplier", minval=1.5, maxval=2.5, step=0.1, group="Mean Reversion")
rsi_oversold = input.int(25, "RSI Oversold", minval=20, maxval=35, group="Mean Reversion")
rsi_overbought = input.int(75, "RSI Overbought", minval=65, maxval=80, group="Mean Reversion")

// Breakout Settings
breakout_length = input.int(20, "Breakout Period", minval=15, maxval=30, group="Breakout")
volume_mult = input.float(1.8, "Volume Multiplier", minval=1.3, maxval=2.5, step=0.1, group="Breakout")

// Risk Management
base_stop_atr = input.float(2.2, "Base Stop (ATR Multiple)", minval=1.5, maxval=3.0, step=0.1, group="Risk")
base_target_atr = input.float(3.5, "Base Target (ATR Multiple)", minval=2.5, maxval=5.0, step=0.1, group="Risk")
max_risk_per_trade = input.float(1.5, "Max Risk Per Trade (%)", minval=0.5, maxval=3.0, step=0.1, group="Risk")

// ═══════════════════════════════════════════════════════════════════
// MARKET CONTEXT & FILTERS
// ═══════════════════════════════════════════════════════════════════
// Get SPY for market context
spy_close = request.security("SPY", timeframe.period, close)
spy_sma_50 = request.security("SPY", timeframe.period, ta.sma(close, 50))
market_bullish = spy_close > spy_sma_50

// VIX for volatility regime
vix_close = request.security("VIX", timeframe.period, close)
vix_sma = request.security("VIX", timeframe.period, ta.sma(close, 20))
low_vol_regime = vix_close < vix_sma
high_vol_regime = vix_close > vix_sma * 1.2

// Volume and volatility filters
avg_volume = ta.sma(volume, 20)
atr = ta.atr(14)
avg_atr = ta.sma(atr, 20)

volume_surge = volume > avg_volume * volume_mult
normal_volatility = atr < avg_atr * 1.5

// ═══════════════════════════════════════════════════════════════════
// TECHNICAL INDICATORS
// ═══════════════════════════════════════════════════════════════════
// MACD for momentum
macd_line = ta.ema(close, fast_ema) - ta.ema(close, slow_ema)
signal_line = ta.ema(macd_line, signal_ema)
macd_histogram = macd_line - signal_line

// RSI for momentum and mean reversion
rsi = ta.rsi(close, rsi_period)

// Bollinger Bands for mean reversion
bb_basis = ta.sma(close, bb_length)
bb_dev = ta.stdev(close, bb_length)
bb_upper = bb_basis + (bb_dev * bb_mult)
bb_lower = bb_basis - (bb_dev * bb_mult)

// Support/Resistance levels
resistance = ta.highest(high, breakout_length)
support = ta.lowest(low, breakout_length)

// Trend detection
sma_20 = ta.sma(close, 20)
sma_50 = ta.sma(close, 50)
uptrend = sma_20 > sma_50 and close > sma_20
downtrend = sma_20 < sma_50 and close < sma_20
sideways = not uptrend and not downtrend

// ═══════════════════════════════════════════════════════════════════
// STRATEGY 1: MOMENTUM (40% allocation)
// ═══════════════════════════════════════════════════════════════════
// MACD + RSI momentum with trend confirmation
momentum_long_signal = ta.crossover(macd_line, signal_line) and macd_line < 0 and 
                      rsi > 45 and rsi < 70 and close > sma_20 and 
                      volume > avg_volume * 1.3 and market_bullish

momentum_short_signal = ta.crossunder(macd_line, signal_line) and macd_line > 0 and 
                       rsi < 55 and rsi > 30 and close < sma_20 and 
                       volume > avg_volume * 1.3 and not market_bullish

// ═══════════════════════════════════════════════════════════════════
// STRATEGY 2: MEAN REVERSION (35% allocation)  
// ═══════════════════════════════════════════════════════════════════
// Bollinger Band bounce with RSI confirmation
mean_reversion_long = close <= bb_lower and close[1] > bb_lower[1] and 
                     rsi <= rsi_oversold and rsi > rsi[1] and 
                     sideways and low_vol_regime

mean_reversion_short = close >= bb_upper and close[1] < bb_upper[1] and 
                      rsi >= rsi_overbought and rsi < rsi[1] and 
                      sideways and low_vol_regime

// ═══════════════════════════════════════════════════════════════════
// STRATEGY 3: BREAKOUT (25% allocation)
// ═══════════════════════════════════════════════════════════════════
// High-volume breakouts with momentum confirmation
breakout_long = close > resistance[1] and volume_surge and rsi > 55 and macd_histogram > 0 and normal_volatility

breakout_short = close < support[1] and volume_surge and rsi < 45 and macd_histogram < 0 and normal_volatility

// ═══════════════════════════════════════════════════════════════════
// UNIFIED SIGNAL LOGIC
// ═══════════════════════════════════════════════════════════════════
// Prevent conflicting signals
long_signal = (momentum_long_signal or mean_reversion_long or breakout_long) and 
              strategy.position_size == 0 and 
              barstate.isconfirmed

short_signal = (momentum_short_signal or mean_reversion_short or breakout_short) and 
               strategy.position_size == 0 and 
               barstate.isconfirmed

// Determine signal strength for position sizing
signal_strength = 1.0
signal_strength := momentum_long_signal or momentum_short_signal ? 1.4 : signal_strength
signal_strength := breakout_long or breakout_short ? 1.6 : signal_strength
signal_strength := mean_reversion_long or mean_reversion_short ? 1.0 : signal_strength

// Adjust for market conditions
market_multiplier = market_bullish ? 1.1 : 0.9
vol_multiplier = low_vol_regime ? 1.2 : high_vol_regime ? 0.7 : 1.0

final_position_size = 20 * signal_strength * market_multiplier * vol_multiplier
final_position_size := math.min(final_position_size, 35) // Max 35% position

// ═══════════════════════════════════════════════════════════════════
// DYNAMIC RISK MANAGEMENT
// ═══════════════════════════════════════════════════════════════════
// Calculate position size based on fixed risk
risk_amount = strategy.equity * (max_risk_per_trade / 100)
atr_stop_distance = atr * base_stop_atr
position_size_by_risk = risk_amount / atr_stop_distance
max_position_value = strategy.equity * (final_position_size / 100)
shares_by_risk = math.min(position_size_by_risk, max_position_value / close)

// Dynamic stops and targets based on signal type and volatility
stop_multiplier = breakout_long or breakout_short ? base_stop_atr * 0.8 : 
                 mean_reversion_long or mean_reversion_short ? base_stop_atr * 0.6 : 
                 base_stop_atr

target_multiplier = breakout_long or breakout_short ? base_target_atr * 1.2 : 
                   mean_reversion_long or mean_reversion_short ? base_target_atr * 0.8 : 
                   base_target_atr

// Adjust for volatility regime
stop_multiplier *= high_vol_regime ? 1.3 : low_vol_regime ? 0.8 : 1.0
target_multiplier *= high_vol_regime ? 1.4 : low_vol_regime ? 0.9 : 1.0

// ═══════════════════════════════════════════════════════════════════
// TRADE EXECUTION
// ═══════════════════════════════════════════════════════════════════
if long_signal
    strategy.entry("Long", strategy.long, qty=shares_by_risk, 
                   comment=momentum_long_signal ? "Mom_L" : 
                          mean_reversion_long ? "MR_L" : "BO_L")

if short_signal
    strategy.entry("Short", strategy.short, qty=shares_by_risk, 
                   comment=momentum_short_signal ? "Mom_S" : 
                          mean_reversion_short ? "MR_S" : "BO_S")

// ═══════════════════════════════════════════════════════════════════
// EXIT MANAGEMENT
// ═══════════════════════════════════════════════════════════════════
// Calculate stop and target levels
if strategy.position_size > 0
    stop_price = strategy.position_avg_price - (atr * stop_multiplier)
    target_price = strategy.position_avg_price + (atr * target_multiplier)
    
    strategy.exit("Risk_Mgmt", "Long", 
                  stop=stop_price, 
                  limit=target_price, 
                  comment="SL/TP")

if strategy.position_size < 0
    stop_price = strategy.position_avg_price + (atr * stop_multiplier)
    target_price = strategy.position_avg_price - (atr * target_multiplier)
    
    strategy.exit("Risk_Mgmt", "Short", 
                  stop=stop_price, 
                  limit=target_price, 
                  comment="SL/TP")

// Time-based exits for mean reversion
bars_in_trade = strategy.opentrades.entry_bar_index(strategy.opentrades - 1)
current_bar = bar_index
time_in_trade = current_bar - bars_in_trade

if strategy.position_size != 0 and time_in_trade > 15 and (mean_reversion_long or mean_reversion_short)
    strategy.close_all(comment="Time_Exit")

// Momentum failure exits
momentum_failure_long = strategy.position_size > 0 and rsi < 30 and close < sma_20
momentum_failure_short = strategy.position_size < 0 and rsi > 70 and close > sma_20

if momentum_failure_long or momentum_failure_short
    strategy.close_all(comment="Mom_Fail")

// ═══════════════════════════════════════════════════════════════════
// VISUALIZATION
// ═══════════════════════════════════════════════════════════════════
// Plot key levels
plot(sma_20, "SMA 20", color=color.blue, linewidth=1)
plot(sma_50, "SMA 50", color=color.red, linewidth=1)
plot(bb_upper, "BB Upper", color=color.gray, linewidth=1)
plot(bb_lower, "BB Lower", color=color.gray, linewidth=1)
plot(bb_basis, "BB Basis", color=color.yellow, linewidth=1)

// Highlight breakout levels
plot(resistance, "Resistance", color=color.green, style=plot.style_stepline, linewidth=1)
plot(support, "Support", color=color.red, style=plot.style_stepline, linewidth=1)

// Signal markers
plotshape(long_signal, style=shape.triangleup, location=location.belowbar, 
          color=color.green, size=size.small, title="Long Signal")
plotshape(short_signal, style=shape.triangledown, location=location.abovebar, 
          color=color.red, size=size.small, title="Short Signal")

// Background for market regime
bgcolor(market_bullish ? color.new(color.green, 97) : color.new(color.red, 97))

// Performance table
var table perf_table = table.new(position.top_right, 2, 5, bgcolor=color.white, border_width=1)
if barstate.islast
    table.cell(perf_table, 0, 0, "Metric", bgcolor=color.blue, text_color=color.white)
    table.cell(perf_table, 1, 0, "Value", bgcolor=color.blue, text_color=color.white)
    
    table.cell(perf_table, 0, 1, "Net Profit", bgcolor=color.white)
    table.cell(perf_table, 1, 1, str.tostring((strategy.netprofit/strategy.initial_capital)*100, "#.##") + "%", bgcolor=color.white)
    
    table.cell(perf_table, 0, 2, "Win Rate", bgcolor=color.white)
    table.cell(perf_table, 1, 2, str.tostring((strategy.wintrades/strategy.closedtrades)*100, "#.##") + "%", bgcolor=color.white)
    
    table.cell(perf_table, 0, 3, "Profit Factor", bgcolor=color.white)
    table.cell(perf_table, 1, 3, str.tostring(strategy.grossprofit/strategy.grossloss, "#.##"), bgcolor=color.white)
    
    table.cell(perf_table, 0, 4, "Total Trades", bgcolor=color.white)
    table.cell(perf_table, 1, 4, str.tostring(strategy.closedtrades), bgcolor=color.white)
